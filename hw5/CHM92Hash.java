public class CHM92Hash  { 	
  /*
   * To reduce space usage, remove the key list if it is not needed. The
   * list is not needed for hash table operation. If you hash a value
   * which is not in the table (which you shouldn't), the only way to
   * detect the miss is to compare against the corresponding table index.
   */
public static final String[] KEY_LIST = {
	"January",
	"February",
	"March",
	"April",
	"May",
	"June",
	"July",
	"August",
	"September",
	"October",
	"November",
	"December",
};
private static final int[][] TABLE_1 = {
{
2, 7, 13, 14, 4, 13, 4, 9,
	16, 14, 0, 3, 14, 16, 16, 7,
	22, 4, 13, 19, 0, 7, 23, 3,
	2, 9, 3, 4, 5, 2, 16, 2,
	22, 4, 3, 22, 8, 20, 4, 10,
	24, 2, 15, 3, 7, 11, 9, 5,
	23, 21, 5, 9, 18, 1, 4, 23,
	6, 18, 2, 15, 6, 9, 19, 

},
{	
24, 2, 6, 11, 18, 6, 15, 22,
	2, 15, 14, 5, 1, 17, 13, 17,
	12, 3, 2, 6, 4, 16, 2, 7,
	16, 13, 18, 22, 20, 11, 6, 7,
	1, 12, 8, 12, 7, 18, 15, 22,
	14, 2, 2, 18, 3, 19, 5, 12,
	4, 5, 4, 6, 24, 23, 16, 2,
	10, 6, 0, 22, 4, 24, 18, 

},
{	
12, 17, 13, 22, 0, 14, 9, 23,
	19, 11, 22, 6, 13, 8, 6, 7,
	19, 11, 24, 20, 24, 14, 13, 0,
	23, 3, 3, 21, 4, 12, 18, 12,
	22, 9, 2, 12, 13, 24, 21, 11,
	10, 16, 17, 20, 16, 24, 3, 3,
	4, 9, 11, 11, 7, 20, 13, 21,
	4, 22, 17, 17, 20, 5, 0, 

},
{	
9, 22, 1, 19, 11, 12, 14, 5,
	21, 24, 5, 17, 23, 14, 22, 19,
	4, 7, 20, 15, 1, 18, 7, 21,
	21, 16, 1, 5, 14, 19, 11, 19,
	11, 3, 10, 8, 11, 12, 1, 9,
	13, 11, 3, 19, 4, 24, 0, 11,
	24, 15, 7, 6, 9, 5, 10, 15,
	14, 3, 20, 17, 6, 2, 14, 

},
{	
1, 21, 19, 7, 13, 3, 4, 12,
	13, 9, 4, 12, 5, 5, 24, 21,
	23, 22, 6, 19, 24, 12, 8, 3,
	21, 4, 22, 3, 22, 20, 2, 2,
	0, 10, 18, 17, 15, 8, 6, 17,
	16, 6, 9, 1, 15, 9, 21, 15,
	12, 8, 22, 11, 11, 12, 17, 0,
	15, 24, 4, 14, 22, 11, 18, 

},
{	
24, 4, 5, 3, 8, 10, 9, 22,
	11, 9, 22, 3, 22, 15, 9, 24,
	14, 5, 18, 12, 14, 23, 23, 3,
	23, 22, 10, 5, 18, 15, 20, 24,
	9, 6, 3, 21, 6, 5, 21, 20,
	19, 15, 6, 15, 13, 3, 10, 19,
	10, 19, 17, 10, 16, 15, 15, 24,
	17, 13, 21, 6, 13, 5, 16, 

},
{	
20, 20, 13, 20, 6, 24, 23, 23,
	1, 17, 7, 24, 8, 7, 16, 9,
	13, 0, 7, 23, 2, 3, 0, 13,
	8, 9, 12, 16, 2, 6, 16, 10,
	11, 22, 14, 16, 2, 15, 21, 19,
	1, 15, 10, 5, 14, 14, 12, 11,
	20, 13, 17, 15, 7, 6, 21, 4,
	3, 24, 7, 1, 22, 24, 11, 

},
{	
24, 17, 4, 2, 24, 17, 9, 4,
	19, 13, 12, 21, 7, 8, 20, 24,
	22, 10, 10, 15, 17, 3, 9, 7,
	12, 20, 21, 13, 7, 6, 21, 8,
	8, 9, 7, 0, 12, 1, 9, 23,
	12, 23, 23, 3, 12, 5, 0, 24,
	12, 22, 18, 11, 6, 5, 5, 6,
	1, 8, 4, 12, 23, 1, 12, 

},
{	
},

private static final int[][] TABLE_2 = {
{
11, 5, 9, 23, 0, 20, 12, 17,
	10, 0, 23, 6, 23, 10, 16, 3,
	0, 2, 17, 4, 14, 11, 19, 18,
	13, 15, 15, 17, 5, 24, 7, 20,
	6, 1, 3, 11, 16, 14, 8, 24,
	7, 19, 10, 18, 6, 8, 24, 20,
	21, 10, 6, 16, 8, 12, 10, 13,
	7, 10, 24, 15, 16, 12, 2, 

},
{	
14, 5, 17, 4, 22, 9, 10, 22,
	13, 6, 0, 19, 10, 7, 15, 19,
	13, 15, 19, 6, 17, 0, 22, 16,
	1, 0, 1, 21, 13, 22, 11, 21,
	16, 18, 4, 6, 15, 23, 0, 16,
	16, 17, 3, 15, 2, 21, 20, 18,
	9, 24, 22, 23, 7, 4, 14, 14,
	14, 10, 14, 9, 15, 4, 9, 

},
{	
20, 17, 14, 3, 11, 15, 19, 14,
	16, 2, 23, 10, 19, 6, 14, 3,
	7, 24, 13, 6, 16, 8, 14, 24,
	19, 3, 4, 4, 21, 20, 8, 0,
	13, 12, 12, 13, 20, 13, 19, 8,
	20, 23, 5, 11, 17, 19, 12, 24,
	13, 2, 0, 0, 14, 6, 18, 3,
	5, 6, 22, 19, 6, 21, 10, 

},
{	
8, 15, 23, 18, 6, 22, 23, 20,
	16, 23, 0, 9, 21, 11, 16, 24,
	4, 21, 19, 2, 19, 13, 0, 8,
	2, 12, 0, 8, 5, 0, 17, 10,
	17, 2, 19, 12, 23, 23, 7, 1,
	11, 17, 18, 23, 11, 19, 22, 24,
	12, 17, 14, 22, 6, 8, 20, 18,
	11, 19, 17, 13, 20, 1, 6, 

},
{	
14, 19, 0, 10, 16, 20, 11, 17,
	18, 20, 2, 10, 16, 18, 6, 15,
	14, 16, 17, 12, 2, 18, 17, 1,
	4, 5, 10, 2, 23, 10, 7, 20,
	8, 23, 5, 16, 5, 22, 19, 12,
	13, 12, 18, 11, 10, 17, 10, 2,
	15, 18, 7, 21, 20, 0, 7, 11,
	1, 6, 18, 23, 23, 15, 15, 

},
{	
1, 9, 1, 16, 19, 22, 19, 12,
	10, 12, 5, 6, 9, 2, 1, 16,
	11, 9, 7, 21, 22, 21, 7, 5,
	21, 23, 2, 21, 16, 15, 10, 19,
	21, 19, 14, 17, 23, 14, 9, 9,
	10, 12, 23, 16, 3, 11, 10, 6,
	4, 19, 12, 23, 10, 18, 12, 18,
	16, 9, 21, 5, 23, 5, 22, 

},
{	
24, 1, 15, 6, 11, 7, 4, 23,
	21, 12, 1, 5, 9, 2, 18, 9,
	9, 13, 5, 18, 11, 7, 21, 19,
	14, 18, 16, 3, 20, 23, 5, 10,
	1, 22, 14, 9, 23, 19, 21, 11,
	3, 7, 5, 6, 23, 6, 15, 8,
	17, 18, 22, 18, 21, 14, 16, 1,
	6, 2, 15, 24, 24, 17, 10, 

},
{	
9, 15, 3, 3, 15, 24, 12, 14,
	11, 3, 11, 18, 9, 14, 12, 13,
	11, 17, 18, 6, 6, 7, 11, 20,
	14, 19, 24, 10, 24, 22, 9, 12,
	4, 10, 9, 11, 6, 19, 24, 13,
	24, 0, 9, 24, 2, 10, 2, 1,
	20, 4, 15, 20, 11, 16, 9, 2,
	4, 1, 20, 24, 19, 21, 4, 

},
{	
},

private static final String[] G = {
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
	"0",
};
  /**
   * Determines the hash code of the given string, which is equal to its
   * index in the key list.
   * Precondition: the given string is within the key list.
   * 
   * @param key
   *   the string for which to calculate a hash
   * @return
   *   the hash code of the given string
   */
  public static int hash(String key) {
    int i, u, v;

    for (u = v = i = 0; i < key.length(); ++i) {
      u = (u + TABLE_1[i % 8][key.charAt(i) % 64])
            % 25;
      v = ((v + TABLE_2[i % 8][key.charAt(i) % 64])
            % 25);
    }

    return (G[u] + G[v]) % 12;
  }

  /*
   * Example main method to test the hash function. Every key should hash
   * to its own index. An error message will be printed if this doesn't
   * hold.
   * 
   * Uncomment to use.
   */
  /*
  public static void main(String[] args) {
    for (int i = 0; i < KEY_LIST.length; ++i) {
      int h = hash(KEY_LIST[i]);
      if (h != i) {
        System.err.printf("Error while hashing \"%s\": expected %d but was %d%n", KEY_LIST[i], i, h);
      }
    }
  }
  */

  }